<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>学无止境</title>
  <subtitle>干就对了</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-08-15T19:33:29.298Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>栋梁</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysecondblog</title>
    <link href="http://yoursite.com/2017/08/16/mysecondblog/"/>
    <id>http://yoursite.com/2017/08/16/mysecondblog/</id>
    <published>2017-08-15T19:21:31.000Z</published>
    <updated>2017-08-15T19:33:29.298Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本来想第二天晚上就把next主题配置写上来着。结果那天突发奇想琢磨做个手机应用，查各种教程，安装Andriodstudio的时候遇到各种问题，网上那群废物给的意见10个有8个是没用的，两天下来成功吧电脑搞废掉了，我能咋办我也很绝望呀。</p>
<p>俗话说，一只小强的灭亡伴随着千千万万小强的崛起。准备好电脑重做系统，从头再来一遍。正好一边做还能顺便把这篇博客写了，不费话了说干就干。</p>
<h1 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h1><p>承接上一篇文章，在这个颜值即正义的时代，没有一个好的门面显然是不够的，所以我们这次目的主要是把博客网页的所有功能都加上，且做好看一点，所以这篇博客的主要内容就有</p>
<p>1.配置一个自己喜欢的主题</p>
<p>2.配置头像</p>
<p>3.加入fork me on github标</p>
<p>4.加入分享到微博、朋友圈等功能</p>
<p>5.加入友情链接</p>
<p>6.加入参观人数统计</p>
<p>7.加入打赏功能</p>
<h1 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h1><p>上一篇我们把基本的网站搭好以后展示的就像下面的这个样子<br><img src="http://i.imgur.com/OO05yNQ.png" alt=""><br>但这个样子怎么能够呢，拿出去溜达街都上不去就得被狗咬，所以我们首先要做的是选一个好的主题。</p>
<h2 id="第一步：下载主题"><a href="#第一步：下载主题" class="headerlink" title="第一步：下载主题"></a>第一步：下载主题</h2><p>打开Git的终端，输入指令</p>
<blockquote>
<p>cd 你的文件夹路径  //打开你的博客站文件夹</p>
<p>git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">https://github.com/iissnan/hexo-theme-next</a> themes/next   //把next主题下载到你的博客站的文件夹中</p>
</blockquote>
<p>下载完成后你的<code>theme</code>文件夹下就多了一个<code>next</code>文件夹，就是你的主题文件了。</p>
<p><strong>注意</strong>：博客站下文件夹里面有个<code>_config.yml</code>这个叫<strong>站点配置文件</strong>，主题下的<code>_config.yml</code>文件叫<strong>主题配置文件</strong>。</p>
<h2 id="第二步，启用主题"><a href="#第二步，启用主题" class="headerlink" title="第二步，启用主题"></a>第二步，启用主题</h2><p>打开站点配置文件，找到里面的theme,将后面的字段landscape改成next</p>
<blockquote>
<p>theme: next//注意不要少空格</p>
</blockquote>
<p>保存，这样主题就配置好了，你可以自己查看一下<br>在node.js下输入</p>
<blockquote>
<p>cd 你的文件夹路径<br>hexo clean //清理缓存<br>hexo g//生成修改后的网页<br>hexo s//推送到本地浏览器站点<br>当终端显示<br>INFO  Hexo is running at <a href="http://0.0.0.0:4000/" target="_blank" rel="external">http://0.0.0.0:4000/</a>. Press Ctrl+C to stop.<br>这时在浏览器中输入<code>localhost:4000</code>,就可以看到你配置的主题网站了<br><img src="http://i.imgur.com/nqFVTNL.png" alt=""></p>
<h1 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h1><h3 id="选择Scheme"><a href="#选择Scheme" class="headerlink" title="选择Scheme"></a>选择Scheme</h3><p>Scheme是Next下面的一种特性，使用这个你可设置不同的网页外观<br>目前 NexT 支持三种 Scheme，他们是：</p>
</blockquote>
<p>Muse - 默认 比较丑</p>
<p>Mist - Muse 的紧凑版本，整洁有序的单栏外观</p>
<p>Pisces - 双栏 Scheme.</p>
<p>以我的为例，打开主题<code>theme</code>目录下的<strong>主题配置文件</strong>搜索<code>scheme</code><br>将想要的风格前面#号去掉即可<br><code>#scheme: Muse</code></p>
<p><code>#scheme: Mist</code></p>
<p><code>scheme: Pisces</code>//这个是我用的主题</p>
<p><code>#scheme: Gemini</code><br>重新输入指令去网页查看一下<br>你会发现现在跟<a href="https://dongliangshijie.github.io/" target="_blank" rel="external">我的博客</a>的样式差不多了<br><img src="http://i.imgur.com/XdmSyAC.png" alt=""></p>
<h1 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h1><p>编辑<strong>站点配置文件</strong>，将<code>language</code>设置成中文，即</p>
<blockquote>
<p>language: zh-Hans  //注意不要少空格<br>这里就不考虑其他情况了</p>
<h1 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h1><p>[引]菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 Font Awesome 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下 图标模糊的问题。</p>
</blockquote>
<p>编辑<strong>主题配置文件</strong>修改内动如下</p>
<ol>
<li>找到对应的<code>menu</code>字段,菜单内容的设置格式是：item name: link。其中 item name 是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译。<blockquote>
<p><code>menu:</code></p>
<p><code>home: /</code></p>
<p><code>archives: /archives</code></p>
<p><code>#about: /about</code></p>
<p><code>#categories: /categories</code></p>
<p><code>tags: /tags</code></p>
<p><code>#commonweal: /404.html</code></p>
<p>去掉前面的#号和/改为<br>menu:</p>
<p> home: </p>
<p> categories: categories</p>
<p> about: about</p>
<p> archives: archives</p>
<p> tags: tags</p>
<p> sitemap: sitemap.xml</p>
<p> commonweal: 404/</p>
</blockquote>
</li>
</ol>
<p>现在你可以在输入</p>
<blockquote>
<p>cd 你的博客文件路径</p>
<p>hexo g</p>
<p>hexo s</p>
</blockquote>
<p>在浏览器中查看localhost:4000<br><img src="http://i.imgur.com/XjtednE.png" alt=""></p>
<h1 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h1><p>首先找一张自己喜欢的图片改成png格式命名avatar.png(其他也可)，找到主题文件夹，放置在 theme/next/source/images/ 目录下<br>编辑<strong>主题配置文件</strong>，修改字段<code>avatar</code><br>配置为<code>avatar: /images/avatar.png</code><br>保存以后查看就有你的头像了</p>
<p>#设置作者昵称等#<br>编辑<strong>站点配置文件</strong>，设置(注意用sublime软件或markdown软件打开修改，不要用文本文档打开因为汉语识别有问题)<br><code># Site</code></p>
<p><code>title: 学无止境</code></p>
<p><code>subtitle: 干就对了</code></p>
<p><code>description: 做个对技术有追求的人</code></p>
<p><code>author: 栋梁</code></p>
<p><code>language: zh-Hans</code></p>
<p><code>timezone:</code><br>重新生成localhost:4000现在你看到网页应该是这个样子的<br><img src="http://i.imgur.com/QAwDgOq.png" alt=""></p>
<h1 id="添加fork-me-on-github"><a href="#添加fork-me-on-github" class="headerlink" title="添加fork me on github"></a>添加fork me on github</h1><p>点击<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="external">这里</a>挑选一个自己喜欢的样式，复制里面代码将其放在<code>themes/next/layout/_layout.swig</code>文件中放在<header前面><img src="http://i.imgur.com/0oeyQzm.png" alt=""></header前面></p>
<h1 id="添加动态背景"><a href="#添加动态背景" class="headerlink" title="添加动态背景"></a>添加动态背景</h1><p>很多关于这个的设置都不太靠谱，我参考的是<a href="http://shenzekun.cn/hexo如何添加动态背景.html" target="_blank" rel="external">这里</a>,实现的方法如下</p>
<p><strong>修改_layout.swig</strong></p>
<p>打开 next/layout/_layout.swig<br>在 &lt; /body&gt;之前添加代码(注意不要放在&lt; /head&gt;的后面)</p>
<blockquote>
<ol>
<li>```</li>
</ol>
<p><strong>修改配置文件</strong></p>
</blockquote>
<p>打开 /next/_config.yml,搜索字段canvas-nest,将后面的false改成true</p>
<p><code># Canvas-nest</code></p>
<p><code>canvas_nest: true</code>有了动态背景<br>这时你的网站就<br><img src="http://i.imgur.com/J0WBRio.png" alt=""></p>
<h1 id="添加分享"><a href="#添加分享" class="headerlink" title="添加分享"></a>添加分享</h1><p>我们看别人的文章的时候往往在下面能看见分享到微博、人人扣扣空间等<br>我们也可以<br>修改主题配置文件jiathis改为true就可以了<br>如图<img src="http://i.imgur.com/T6A58dw.png" alt=""></p>
<h1 id="实现统计功能"><a href="#实现统计功能" class="headerlink" title="实现统计功能"></a>实现统计功能</h1><p>实现方法<br>在根目录下安装 hexo-wordcount,运行：</p>
<blockquote>
<p><code>$ npm install hexo-wordcount --save</code></p>
<p>修改主题目录文件将flase都改成true 如下</p>
<p><code>post_wordcount:</code></p>
<p><code>item_text: true</code></p>
<p><code>wordcount: true</code></p>
<p> <code>min2read: true</code></p>
<p> <code>totalcount: true</code></p>
<p> <code>separated_meta: true</code></p>
</blockquote>
<p>效果如下<img src="http://i.imgur.com/wRZYtZ3.png" alt=""></p>
<h1 id="文章添加阴影效果"><a href="#文章添加阴影效果" class="headerlink" title="文章添加阴影效果"></a>文章添加阴影效果</h1><p>实现方法：<br>打开\themes\next\source\css_custom\custom.styl,向里面加入：</p>
<blockquote>
<p>// 主页文章添加阴影效果</p>
<p>.post {</p>
<p>  margin-top: 60px;</p>
<p>  margin-bottom: 60px;</p>
<p>  padding: 25px;</p>
<p>  -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</p>
<p>  -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);<br>  }</p>
</blockquote>
<p>现在已经是深夜一点了干不动了，不过这个网站建立的也基本差不多了</p>
<p>如果看完还有不会的地方欢迎参考<a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="external">这里</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;本来想第二天晚上就把next主题配置写上来着。结果那天突发奇想琢磨做个手机应用，查各种教程，安装Andriodstudio的时候遇到各种问题
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>我的第一个网站：Windows搭建Hexo博客配置Next主题</title>
    <link href="http://yoursite.com/2017/08/16/my-first-blog/"/>
    <id>http://yoursite.com/2017/08/16/my-first-blog/</id>
    <published>2017-08-15T19:16:08.000Z</published>
    <updated>2017-08-15T19:17:52.984Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>早先就觉得有个属于自己的网站是一件很拉风的事情。不仅能做记录、整理思路、提升自己的技术征程，还能拿出去装B,一举好几得。这不，正好高温假（就15天！！！）在家里闲的蛋疼，所以就逛了逛人家的博客，结果越看越鸡动，告诉自己一个不会做网站的机械工程师就是条咸鱼，然后一阵燥热。</p>
<p>第二天咨询了下我家<a href="https://madongqiang2201.github.io/" target="_blank" rel="external">小马哥</a>。仿照着自己做一个貌似不难，我肯定也能做出来。终于再也控制不住我自己，打开电脑<strong>干</strong>就对了！</p>
<h1 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h1><p>小马哥告诉我做个静态博客最好用Hexo驱动，Next的主题比较不错，其实我最开始没听懂，因为我毕竟是个学机械的，不过做完就懂了。但我当时就想做出像<a href="https://appkfz.com/" target="_blank" rel="external">阳春面</a>和<a href="https://madongqiang2201.github.io/" target="_blank" rel="external">小马哥</a>网站的这种效果。所以这篇文章的内容就分成了两方面。</p>
<ol>
<li><strong>使用Hexo和Github做一个基本的网页</strong></li>
<li><strong>配置next主题做一点简单的优化</strong></li>
</ol>
<p>最终做出来就跟我这个<a href="https://dongliangshijie.github.io/" target="_blank" rel="external">博客</a>一样，改一个位置就成了<a href="https://appkfz.com/" target="_blank" rel="external">阳春面</a>博客的样子,先按我这个来吧。小马哥是用Mac Pro做的，过程上差不太多。</p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol>
<li>准备一Github的账号</li>
<li>安装Git和node.js</li>
<li>配置SSH key</li>
<li>安装Hexo</li>
<li>同步到Github</li>
<li>主题配置和优化</li>
</ol>
<p>接下来逐个介绍</p>
<h1 id="注册一个Github账号"><a href="#注册一个Github账号" class="headerlink" title="注册一个Github账号"></a>注册一个Github账号</h1><p>凡是接触过一些编程的人应该都接触过一点Github,因为上面有一些开源的库文件，很好用。我们的博客网页因为托管在github pages上，所以需要要注册一个github账号，并且需要创建一个公开库（repo），用来存放你的博客。Github的账号在<a href="https://github.com/" target="_blank" rel="external">这里</a>注册<br><img src="http://i.imgur.com/7KinTGU.png" alt="">  注册的整个过程跟其他网站类似这里不再赘述，注册完以后就是创建库了，github上创建public库是免费的，也就是传说中的开源库。private是收费的我们不管。<br>有了账号以后第二部就是创建一个repo<br><img src="http://i.imgur.com/TQdkJXL.png" alt=""><br><img src="http://i.imgur.com/01rDq9L.png" alt=""><br>按照图中箭头的指示就可以创建好了一个自己的公开repo(库)了，这里需要特别<strong>注意</strong>的是库的名字那块一定是<code>username.github.io</code>,比如我用户名注册时的<code>dongliangshijie</code>,库的名字就是<code>dongliangshijie.github.io</code>，一定要这样！。然后<strong>点击</strong><code>Creat repository</code>就把公开库建立起来了<br>我说的这么详细你应该已经懂了,如果不懂参考</p>
<p><a href="http://stormzhang.com/github/2016/05/25/learn-github-from-zero1/" target="_blank" rel="external">从0开始学习 GITHUB</a></p>
<p><a href="http://www.worldhello.net/gotgithub/" target="_blank" rel="external">GotGitHub</a></p>
<p>这两个链接内容看完你就疯了</p>
<h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><p>Git是一个强大的版本管理工具，Github的版本管理就是基于Git的，现在svn基本过时了，使用Git进行版本管理才是王道。在windows下安装Git跟安装其他软件一样。你可以去Git官网去下载，但是我推荐不要下载最新版本的Git，因为我也不知道为啥用官网最新版本安装，后续生成的时候会报错，很烦人，所以我们可以直接百度一个其他版本比如<a href="http://www.wmzhe.com/soft-38801.html" target="_blank" rel="external">这个</a>(注意下载按钮在下面别点错)，下载下来安装就可以了。</p>
<h1 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h1><p>Hexo是基于node.js的，所以要让Hexo运行，node.js环境是必须的。<br>node.js直接去<a href="https://nodejs.org/en/" target="_blank" rel="external">官网</a>下载就可以了<br><img src="http://i.imgur.com/xrDDJxM.png" alt=""><br>安装教程跟普通软件一样，就不赘述了</p>
<h1 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h1><p>这一步可以忽略但我建议跟着做一下。虽然SSH key不影响使用，但是建议还是跟着做一下，就当帮助理解吧</p>
<h1 id="检查本机上是否存在SSH-key"><a href="#检查本机上是否存在SSH-key" class="headerlink" title="检查本机上是否存在SSH key"></a>检查本机上是否存在SSH key</h1><p>如果你像我一样是个小白，那么你的电脑上是肯定没有SSH key,所以这一步可以不看。<br>只是看别人的博客写了，我也就放在这边吧，万一哪位用的到呢<br>检查的方式时在<strong>node.js的终端</strong></p>
<blockquote>
<p>cd .ssh</p>
<p>la -la</p>
<h1 id="创建一个SSH-key"><a href="#创建一个SSH-key" class="headerlink" title="创建一个SSH key"></a>创建一个SSH key</h1><p>使用<strong>Git的终端</strong>输入一行指令</p>
<p>$ ssh-keygen -t rsa -C “your_email@example.com”</p>
</blockquote>
<p>注：这里注意以后只要出现<code>$</code>符号的都是在Git的终端上运行的。而且所有的空格都不能忽略。</p>
<p>接下来点击回车，接着会提示你，让你输入文件名，直接回车会创建使用默认文件名的文件（推荐使用默认文件名）；然后会提示你输入两次密码（输入密码之后没有反馈，显示还是空白，但是你确实已经输入了），当然密码也可以不输，直接回车，如果这里没有输入密码，以后提交博客更新的时候就不需要输入密码了。</p>
<h1 id="添加SSH-key到github"><a href="#添加SSH-key到github" class="headerlink" title="添加SSH key到github"></a>添加SSH key到github</h1><p>经过上一步，如果你没有指定文件名（也就是使用的默认文件名），那么你的.ssh文件夹下，应该有一个id_rsa.pub文件了，打开该文件（不涉及中文可以用文本文档打开，但最好用sublime），复制里面的文本。然后登陆github，点击右上角头像右边的三角图标，点击Settings，然后在左边菜单栏点击SSH and GPG keys，点击new ssh key，title 随便填一个，在key 栏填入你复制的内容，点击add ssh key，就可以添加一个ssh key了，如下图：<br><img src="http://i.imgur.com/6M5E6Lw.png" alt=""></p>
<h1 id="验证SSH-key是否配置成功"><a href="#验证SSH-key是否配置成功" class="headerlink" title="验证SSH key是否配置成功"></a>验证SSH key是否配置成功</h1><p>在终端输入</p>
<blockquote>
<p>ssh -T git@github.com</p>
</blockquote>
<p>如果没有密码的话就各种回车，直到最后提示</p>
<blockquote>
<p>Hi yourusername! You’ve successfully authenticated, but GitHub does not provide shell access.</p>
</blockquote>
<p>这时候说明你的ssh key添加成功了<br>如果有其他的问题你可以微信联系我，或者参考<a href="http://www.cnblogs.com/ayseeing/p/3572582.html" target="_blank" rel="external">这里</a></p>
<h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><p>做了这么多的准备工作终于到了最关键的时候了，参照小马哥和其他的网站操作的时候这边遇到了很多的问题，卡了一天。不过后来走通了</p>
<p> 首先我们已经安装了node.js，那么接下来我们要做的就是使用npm语言，所以第一步打开<strong>node.js的终端</strong>输入指令</p>
<blockquote>
<p>npm install -g hexo</p>
</blockquote>
<p>用来安装hexo,一定要多等一会。你想把博客建在哪里输入的指令略有差别（下面两种二选一）</p>
<ol>
<li>如果你想省点事让它自己生成你就这样依次输入每一行一个回车（推荐因为省心）</li>
</ol>
<blockquote>
<p>hexo init blog</p>
<p>cd blog</p>
<p>npm install</p>
</blockquote>
<p>2.如果你想放在指定的文件夹下你就新建一个文件夹（命名为英文）</p>
<blockquote>
<p>cd <code>你的文件路径</code>             /<em>批注它得进入你这个文件夹，才能对这个文件夹初始化</em>/</p>
<p>hexo init</p>
<p>npm install</p>
</blockquote>
<p>到这个地方你就已经在你的电脑里面准备好了生成本地博客所需要的所有的条件接下来输入</p>
<blockquote>
<p>hexo g  // 全拼是：hexo generate，可以简写成 hexo g</p>
<p>hexo s  // 全拼是：hexo server，可以简写成 hexo s</p>
</blockquote>
<p>这样就开启了一个本地的博客，现在打开浏览器输入<code>localhost:4000</code>,就可以看你的本地博客了</p>
<p><strong>注意**</strong>(顺利安装可以不看)<strong> ：所有hexo 开头的指令都需要到你创建的博客的文件夹  比如你在这一步过程中遇到了问题报错了那么在重新输入的时候要使用</strong>node.js终端**先打开文件夹  <code>cd 你的文件夹路径</code> 然后才能使用<code>hexo init</code><br><code>npm install</code><br><code>hexo g</code><br><code>hexo s</code></p>
<h1 id="同步Hexo博客到Github"><a href="#同步Hexo博客到Github" class="headerlink" title="同步Hexo博客到Github"></a>同步Hexo博客到Github</h1><p>到这里其实你已经在自己的电脑里面做了一个博客网页，但是网上还没有，别人看不到。想做成一个<strong>网络上的网站</strong>你还需要将你的博客页面发布到github仓库，这样别人就能看见了。</p>
<p>在terminal终端，将当前目录切换到你的本地博客目录（从上一步根据提示点击ctrl+c，然后回车，输入y在回车），执行以下命令：</p>
<blockquote>
<p>npm install hexo-deployer-git –save</p>
</blockquote>
<p>点击回车，稍等一会，安装完成之后，打开本地博客目录的<code>_config.yml</code>文件，编辑其中的deploy节点：</p>
<blockquote>
<p>deploy:</p>
<p> type: git</p>
<p> repo: git@github.com:yourusername/youusername.github.io.git</p>
<p> branch: master</p>
</blockquote>
<p>将上面yourusername替换成你的github用户名即可</p>
<p>保存配置之后，在本地博客目录执行以下命令：</p>
<blockquote>
<p>hexo clean  // clean本地项目，防止缓存</p>
<p>hexo g      // 根据你编辑的md格式的博客，生成静态网页</p>
<p>hexo d      // 将本地博客发布到github</p>
</blockquote>
<p>然后，在浏览器地址栏输入yourusername.github.io就可以访问你的博客了，别人也可以通过这个地址访问你的博客。这个时候别人这个时候看到的你的博客网站是这个样子的<br><img src="http://i.imgur.com/OO05yNQ.png" alt=""></p>
<p>上面这个你的网站虽然能看，但各种不舒服。很low。所以我们还需要加载next主题，主题配置的内容很多,考虑到放在一篇博客里面内容就太多了，看起来有些累，所以拆开，明天再写一篇接着这个。</p>
<p>如果有问题可以微信联系我</p>
<p><img src="http://i.imgur.com/ReJrhnV.png" alt=""></p>
<p>  请叫我郭小梁同志                      </p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;早先就觉得有个属于自己的网站是一件很拉风的事情。不仅能做记录、整理思路、提升自己的技术征程，还能拿出去装B,一举好几得。这不，正好高温假（就
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/08/16/hello-world/"/>
    <id>http://yoursite.com/2017/08/16/hello-world/</id>
    <published>2017-08-15T18:23:21.101Z</published>
    <updated>2017-08-15T18:23:21.101Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
